#!/usr/bin/env zsh

set -e

if [[ $(git -C $DOTFILES diff --shortstat 2> /dev/null | tail -n1) != "" ]]
then
    echo "\033[1;31m──›\033[0m dotfiles are dirty, skipping"
else
    echo "\033[00;32m──›\033[0m updating dotfiles"
    if test "$(git -C $DOTFILES pull)" != "Already up-to-date."
    then
        exit
    fi
fi

if test "$(uname)" = "Linux"
then
  if test "$(whence apt-get 2> /dev/null)"
  then
    echo "\033[00;32m──›\033[0m updating apt-get"
    sudo apt-get update
    set +e
    sudo apt-get dist-upgrade
    sudo apt-get autoremove
    set -e
    sudo apt-get clean
    echo
  elif test "$(whence dnf 2> /dev/null)"
  then
    echo "\033[00;32m──›\033[0m updating dnf"
    sudo dnf clean all
    set +e
    sudo dnf update
    sudo dnf autoremove
    set -e
    sudo dnf clean all
    echo
  fi
fi

if test "$(whence brew 2> /dev/null)"
then
  echo "\033[00;32m──›\033[0m updating brew"
  brew update
  brew upgrade --all
  brew cleanup --force
  brew prune
  if test "$(uname)" = "Darwin"
  then
    brew cask cleanup
  fi
  echo
fi

if test "$(whence fzf 2> /dev/null)"
then
  echo "\033[00;32m──›\033[0m updating fzf"
  if test "$(git -C ~/.fzf pull)" != "Already up-to-date."
  then
    ~/.fzf/install --all --no-update-rc
  fi
  echo
fi

if test "$(whence apm 2> /dev/null)"
then
  echo "\033[00;32m──›\033[0m updating apm"
  apm upgrade -c false
  echo
fi

if test -d ~/.tmux/plugins/tpm
then
  echo "\033[00;32m──›\033[0m updating tpm"
  git -C ~/.tmux/plugins/tpm pull
  # tries to delete everything when TMUX_PLUGIN_MANAGER_PATH is unset https://github.com/tmux-plugins/tpm/issues/58
  #~/.tmux/plugins/tpm/bin/clean_plugins
  ~/.tmux/plugins/tpm/bin/update_plugins all
  echo
fi

if test -d ~/.zplug
then
  echo "\033[00;32m──›\033[0m updating zplug"
  set +e
  git -C ~/.zplug pull
  source $DOTFILES/zplug/zplug.zsh
  zplug update
  zplug clean --force
  zplug clear
  zplug load
  set -e
fi

if test "$(uname)" = "Darwin"
then
  echo "\033[00;32m──›\033[0m OS X Software Update"
  softwareupdate -l
fi
